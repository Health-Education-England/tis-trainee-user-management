plugins {
  id "java"
  id "org.springframework.boot" version "2.7.5"
  id "io.spring.dependency-management" version "1.1.2"

  // Code quality plugins
  id "checkstyle"
  id "jacoco"
  id "org.sonarqube" version "4.3.0.3225"
}

group = "uk.nhs.tis.trainee"
version = "1.2.0"

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

repositories {
  mavenCentral()

  maven {
    url "https://hee-430723991443.d.codeartifact.eu-west-1.amazonaws.com/maven/Health-Education-England/"
    credentials {
      username "aws"
      password System.env.CODEARTIFACT_AUTH_TOKEN
    }
  }
}

dependencyManagement {
  imports {
    mavenBom("io.awspring.cloud:spring-cloud-aws-dependencies:2.4.4")
  }
}

dependencies {
  // Spring Boot starters
  implementation "org.springframework.boot:spring-boot-starter-actuator"
  implementation "org.springframework.boot:spring-boot-starter-web"
  implementation "org.springframework.boot:spring-boot-starter-security"
  testImplementation "org.springframework.boot:spring-boot-starter-test"

  implementation "com.transformuk.hee:tis-security-jwt:5.1.4"
  implementation "com.transformuk.hee:profile-client:3.1.1"

  // Lombok
  compileOnly "org.projectlombok:lombok"
  annotationProcessor "org.projectlombok:lombok"

  // MapStruct
  ext.mapstructVersion = "1.5.5.Final"
  implementation "org.mapstruct:mapstruct:${mapstructVersion}"
  annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
  testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

  // Sentry reporting
  ext.sentryVersion = "6.25.2"
  implementation "io.sentry:sentry-spring-boot-starter:$sentryVersion"
  implementation "io.sentry:sentry-logback:$sentryVersion"

  // Amazon AWS
  implementation "com.amazonaws:aws-java-sdk-cognitoidp"
  implementation "io.awspring.cloud:spring-cloud-starter-aws-messaging"
  implementation "com.amazonaws:aws-xray-recorder-sdk-spring:2.14.0"
}

checkstyle {
  config = resources.text.fromArchiveEntry(configurations.checkstyle[0], "google_checks.xml")
}

jacocoTestReport {
  reports {
    html.required = true
    xml.required = true
  }
}

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(17)
    vendor = JvmVendorSpec.ADOPTIUM
  }
}

sonarqube {
  properties {
    property "sonar.host.url", "https://sonarcloud.io"
    property "sonar.login", System.getenv("SONAR_TOKEN")
    property "sonar.organization", "health-education-england"
    property "sonar.projectKey", "Health-Education-England_tis-trainee-user-management"

    property "sonar.java.checkstyle.reportPaths",
      "build/reports/checkstyle/main.xml,build/reports/checkstyle/test.xml"
  }
}

test {
  finalizedBy jacocoTestReport
  useJUnitPlatform()
}
